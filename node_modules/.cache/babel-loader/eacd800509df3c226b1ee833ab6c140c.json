{"ast":null,"code":"var _jsxFileName = \"/Users/helby1/Desktop/FULL STACK ACADEMY/Course_Work/project_09/Strangers Things/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { postNewUser } from \"../api\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = _ref => {\n  _s();\n\n  let {\n    username,\n    setUsername,\n    password,\n    setPassword,\n    setToken\n  } = _ref;\n  const [newPW1, setNewPW1] = useState('');\n  const [newPW2, setNewPW2] = useState('');\n  const [newUserSuccess, setNewUserSuccess] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const createUser = evt => {\n    evt.preventDefault();\n\n    const getToken = async () => {\n      const returnedResult = await postNewUser(username, password);\n\n      if (returnedResult.success === true) {\n        const returnedToken = returnedResult.data.token;\n        setToken(returnedToken);\n        setNewUserSuccess(returnedResult.success);\n      } else if (returnedResult.success === false) {\n        setErrorMessage(returnedResult.error.message);\n      }\n    };\n\n    getToken();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"register-form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"register-form\",\n      onSubmit: createUser,\n      children: newUserSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Thanks for signing up! Please \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/log-in/\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 62\n          }, this), \" with your new Username and Password to get started.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"log-in-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create a Log-In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"register-message\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: username,\n          id: \"username\",\n          placeholder: \"Username\",\n          onChange: evt => setUsername(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          value: newPW1,\n          id: \"password-submission1\",\n          placeholder: \"Password\",\n          onChange: evt => setNewPW1(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          value: newPW2,\n          id: \"password-submission2\",\n          placeholder: \"Reconfirm Password\",\n          onInput: evt => setNewPW2(evt.target.value),\n          onChange: evt => setPassword(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Account\",\n          disabled: newPW1 === newPW2 ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-message\",\n          children: newPW1 == newPW2 ? null : 'Passwords Must Match'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"uSKYuNoq44/1TLdbLvmzo2R4bD4=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","postNewUser","Link","RegisterForm","username","setUsername","password","setPassword","setToken","newPW1","setNewPW1","newPW2","setNewPW2","newUserSuccess","setNewUserSuccess","errorMessage","setErrorMessage","createUser","evt","preventDefault","getToken","returnedResult","success","returnedToken","data","token","error","message","target","value"],"sources":["/Users/helby1/Desktop/FULL STACK ACADEMY/Course_Work/project_09/Strangers Things/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { postNewUser } from \"../api\";\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst RegisterForm = ({ username, setUsername, password, setPassword, setToken }) => {\n\n    const [newPW1, setNewPW1] = useState('')\n    const [newPW2, setNewPW2] = useState('')\n    const [newUserSuccess, setNewUserSuccess] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n\n    const createUser = (evt) => {\n        evt.preventDefault();\n        const getToken = async () => {\n\n            const returnedResult = await postNewUser(username, password);\n            if (returnedResult.success === true) {\n                const returnedToken = returnedResult.data.token\n                setToken(returnedToken)\n                setNewUserSuccess(returnedResult.success)\n            } else if (returnedResult.success === false) {\n                setErrorMessage(returnedResult.error.message);\n            }\n        }\n    getToken();\n    }\n \n\n\n\n    return (\n        <section id='register-form-container'>\n            <form\n                id='register-form'\n                onSubmit={createUser}\n                >\n                {\n                    newUserSuccess ? \n                        <div>\n                            <p>Thanks for signing up! Please <Link to=\"/log-in/\">Log In</Link> with your new Username and Password to get started.</p>\n                        </div>\n                    :\n                        <div id=\"log-in-inputs\">\n                            <h2>Create a Log-In</h2>\n                            <p className=\"register-message\">{errorMessage}</p>\n                            <input\n                                type='text'\n                                required\n                                value={username}\n                                id='username'\n                                placeholder=\"Username\"\n                                onChange={(evt) => setUsername(evt.target.value)}\n                            ></input>\n                            <input\n                                type='password'\n                                required\n                                value={newPW1}\n                                id='password-submission1'\n                                placeholder=\"Password\"\n                                onChange={(evt) => setNewPW1(evt.target.value)}\n                            ></input>\n                            <input\n                                type='password'\n                                required\n                                value={newPW2}\n                                id='password-submission2'\n                                placeholder=\"Reconfirm Password\"\n                                onInput={(evt) => setNewPW2(evt.target.value)}\n                                onChange={(evt) => setPassword(evt.target.value)}      \n                            ></input>\n                            <input\n                                type='submit'\n                                value='Create Account'\n                                disabled= {(newPW1 === newPW2) ? false : true}\n                            ></input>\n                            <div className=\"register-message\">\n                                {(newPW1 == newPW2 ) ? null : 'Passwords Must Match' }\n                            </div>\n                    </div>\n                }\n                \n                \n            </form>\n\n        </section>\n    )\n}\n\n\nexport default RegisterForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAKA,MAAMC,YAAY,GAAG,QAAgE;EAAA;;EAAA,IAA/D;IAAEC,QAAF;IAAYC,WAAZ;IAAyBC,QAAzB;IAAmCC,WAAnC;IAAgDC;EAAhD,CAA+D;EAEjF,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,KAAD,CAApD;EACA,MAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;;EAGA,MAAMiB,UAAU,GAAIC,GAAD,IAAS;IACxBA,GAAG,CAACC,cAAJ;;IACA,MAAMC,QAAQ,GAAG,YAAY;MAEzB,MAAMC,cAAc,GAAG,MAAMpB,WAAW,CAACG,QAAD,EAAWE,QAAX,CAAxC;;MACA,IAAIe,cAAc,CAACC,OAAf,KAA2B,IAA/B,EAAqC;QACjC,MAAMC,aAAa,GAAGF,cAAc,CAACG,IAAf,CAAoBC,KAA1C;QACAjB,QAAQ,CAACe,aAAD,CAAR;QACAT,iBAAiB,CAACO,cAAc,CAACC,OAAhB,CAAjB;MACH,CAJD,MAIO,IAAID,cAAc,CAACC,OAAf,KAA2B,KAA/B,EAAsC;QACzCN,eAAe,CAACK,cAAc,CAACK,KAAf,CAAqBC,OAAtB,CAAf;MACH;IACJ,CAVD;;IAWJP,QAAQ;EACP,CAdD;;EAmBA,oBACI;IAAS,EAAE,EAAC,yBAAZ;IAAA,uBACI;MACI,EAAE,EAAC,eADP;MAEI,QAAQ,EAAEH,UAFd;MAAA,UAKQJ,cAAc,gBACV;QAAA,uBACI;UAAA,0DAAiC,QAAC,IAAD;YAAM,EAAE,EAAC,UAAT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAjC;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADU,gBAKV;QAAK,EAAE,EAAC,eAAR;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAG,SAAS,EAAC,kBAAb;UAAA,UAAiCE;QAAjC;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UACI,IAAI,EAAC,MADT;UAEI,QAAQ,MAFZ;UAGI,KAAK,EAAEX,QAHX;UAII,EAAE,EAAC,UAJP;UAKI,WAAW,EAAC,UALhB;UAMI,QAAQ,EAAGc,GAAD,IAASb,WAAW,CAACa,GAAG,CAACU,MAAJ,CAAWC,KAAZ;QANlC;UAAA;UAAA;UAAA;QAAA,QAHJ,eAWI;UACI,IAAI,EAAC,UADT;UAEI,QAAQ,MAFZ;UAGI,KAAK,EAAEpB,MAHX;UAII,EAAE,EAAC,sBAJP;UAKI,WAAW,EAAC,UALhB;UAMI,QAAQ,EAAGS,GAAD,IAASR,SAAS,CAACQ,GAAG,CAACU,MAAJ,CAAWC,KAAZ;QANhC;UAAA;UAAA;UAAA;QAAA,QAXJ,eAmBI;UACI,IAAI,EAAC,UADT;UAEI,QAAQ,MAFZ;UAGI,KAAK,EAAElB,MAHX;UAII,EAAE,EAAC,sBAJP;UAKI,WAAW,EAAC,oBALhB;UAMI,OAAO,EAAGO,GAAD,IAASN,SAAS,CAACM,GAAG,CAACU,MAAJ,CAAWC,KAAZ,CAN/B;UAOI,QAAQ,EAAGX,GAAD,IAASX,WAAW,CAACW,GAAG,CAACU,MAAJ,CAAWC,KAAZ;QAPlC;UAAA;UAAA;UAAA;QAAA,QAnBJ,eA4BI;UACI,IAAI,EAAC,QADT;UAEI,KAAK,EAAC,gBAFV;UAGI,QAAQ,EAAIpB,MAAM,KAAKE,MAAZ,GAAsB,KAAtB,GAA8B;QAH7C;UAAA;UAAA;UAAA;QAAA,QA5BJ,eAiCI;UAAK,SAAS,EAAC,kBAAf;UAAA,UACMF,MAAM,IAAIE,MAAX,GAAsB,IAAtB,GAA6B;QADlC;UAAA;UAAA;UAAA;QAAA,QAjCJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAVZ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAwDH,CAnFD;;GAAMR,Y;;KAAAA,Y;AAsFN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}