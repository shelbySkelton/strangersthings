{"ast":null,"code":"import React from \"react\";\nexport const BASE_URL = 'https://strangers-things.herokuapp.com';\nexport const cohortName = '2206-ftb-et-web-ft-b'; // export const testToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmQyMWVkZWM3ODA5MDAwMTcxMzA1NGQiLCJ1c2VybmFtZSI6InNuczA5ZiIsImlhdCI6MTY1NzkzNzYzMH0.sYZ0u-ZbNaeu3ZrAuZakv9s9eErRBdkdhtJM2eAUV9Q'\n\nexport const getMe = async token => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${cohortName}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postLogIn = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${cohortName}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          \"username\": username,\n          \"password\": password\n        }\n      })\n    });\n    const result = await response.json();\n    const resultToken = result.data.token;\n    return resultToken;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const postNewUser = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${cohortName}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          \"username\": username,\n          \"password\": password\n        }\n      })\n    });\n    const result = await response.json();\n    const resultToken = result.data.token;\n    return resultToken;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const fetchPosts = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${cohortName}/posts`);\n    const data = await response.json();\n    const actualPosts = data.data.posts;\n    return actualPosts;\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["React","BASE_URL","cohortName","getMe","token","response","fetch","headers","result","json","error","console","postLogIn","username","password","method","body","JSON","stringify","user","resultToken","data","postNewUser","fetchPosts","actualPosts","posts"],"sources":["/Users/helby1/Desktop/FULL STACK ACADEMY/Course_Work/project_09/Strangers Things/src/api/index.js"],"sourcesContent":["import React from \"react\";\nexport const BASE_URL = 'https://strangers-things.herokuapp.com';\nexport const cohortName = '2206-ftb-et-web-ft-b';\n// export const testToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MmQyMWVkZWM3ODA5MDAwMTcxMzA1NGQiLCJ1c2VybmFtZSI6InNuczA5ZiIsImlhdCI6MTY1NzkzNzYzMH0.sYZ0u-ZbNaeu3ZrAuZakv9s9eErRBdkdhtJM2eAUV9Q'\n\n\n\n\nexport const getMe = async (token) =>  {\n\n    try{\n        const response = await fetch(`${BASE_URL}/api/${cohortName}/users/me`,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n            }\n        );\n            const result = await response.json();\n            return result;\n    } catch(error) {\n        console.error(error)\n    }\n\n}\n\n\nexport const postLogIn = async (username, password) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/api/${cohortName}/users/login`, \n                {\n                    method: \"POST\",\n                    headers: {\n                    'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                    user: {\n                        \"username\": username,\n                        \"password\": password\n                    }\n                    })\n                }\n        );\n            const result = await response.json()\n            const resultToken = result.data.token\n            return resultToken;\n        }\n        catch(error){\n            console.error(error)\n        }\n}\n\n\n\nexport const postNewUser = async (username, password) => {\n\n    try {\n        const response = await fetch(`${BASE_URL}/api/${cohortName}/users/register`, \n                {\n                    method: \"POST\",\n                    headers: {\n                    'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                    user: {\n                        \"username\": username,\n                        \"password\": password\n                    }\n                    })\n                }\n            );\n            const result = await response.json()\n            const resultToken = result.data.token\n            return resultToken;\n        }\n        catch(error){\n            console.error(error)\n        }\n}\n\nexport const fetchPosts = async () => {\n \n    try {\n      const response = await fetch(`${ BASE_URL }/api/${ cohortName }/posts`);\n      const data = await response.json();\n      const actualPosts = data.data.posts\n      return actualPosts;\n    } catch (error) {\n      console.error(error);\n      }\n  }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,QAAQ,GAAG,wCAAjB;AACP,OAAO,MAAMC,UAAU,GAAG,sBAAnB,C,CACP;;AAKA,OAAO,MAAMC,KAAK,GAAG,MAAOC,KAAP,IAAkB;EAEnC,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAOC,UAAW,WAA/B,EACxB;MACIK,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,iBAAkB,UAASH,KAAM;MAF5B;IADb,CADwB,CAA5B;IAQI,MAAMI,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;IACA,OAAOD,MAAP;EACP,CAXD,CAWE,OAAME,KAAN,EAAa;IACXC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AAEJ,CAjBM;AAoBP,OAAO,MAAME,SAAS,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAEnD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAOC,UAAW,cAA/B,EACpB;MACIa,MAAM,EAAE,MADZ;MAEIR,OAAO,EAAE;QACT,gBAAgB;MADP,CAFb;MAKIS,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACrBC,IAAI,EAAE;UACF,YAAYN,QADV;UAEF,YAAYC;QAFV;MADe,CAAf;IALV,CADoB,CAA5B;IAcI,MAAMN,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;IACA,MAAMW,WAAW,GAAGZ,MAAM,CAACa,IAAP,CAAYjB,KAAhC;IACA,OAAOgB,WAAP;EACH,CAlBL,CAmBI,OAAMV,KAAN,EAAY;IACRC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACR,CAxBM;AA4BP,OAAO,MAAMY,WAAW,GAAG,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;EAErD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAOC,UAAW,iBAA/B,EACpB;MACIa,MAAM,EAAE,MADZ;MAEIR,OAAO,EAAE;QACT,gBAAgB;MADP,CAFb;MAKIS,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACrBC,IAAI,EAAE;UACF,YAAYN,QADV;UAEF,YAAYC;QAFV;MADe,CAAf;IALV,CADoB,CAA5B;IAcI,MAAMN,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAArB;IACA,MAAMW,WAAW,GAAGZ,MAAM,CAACa,IAAP,CAAYjB,KAAhC;IACA,OAAOgB,WAAP;EACH,CAlBL,CAmBI,OAAMV,KAAN,EAAY;IACRC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACH;AACR,CAxBM;AA0BP,OAAO,MAAMa,UAAU,GAAG,YAAY;EAElC,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAGL,QAAU,QAAQC,UAAY,QAAnC,CAA5B;IACA,MAAMmB,IAAI,GAAG,MAAMhB,QAAQ,CAACI,IAAT,EAAnB;IACA,MAAMe,WAAW,GAAGH,IAAI,CAACA,IAAL,CAAUI,KAA9B;IACA,OAAOD,WAAP;EACD,CALD,CAKE,OAAOd,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;EACC;AACJ,CAVI"},"metadata":{},"sourceType":"module"}